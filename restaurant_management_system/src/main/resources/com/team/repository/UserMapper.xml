<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.team.repository.UserMapper" >
  <resultMap id="BaseResultMap" type="com.team.entity.User" >
    <id column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="authority" property="authority" jdbcType="INTEGER" />
    <result column="entry_date" property="entryDate" jdbcType="DATE" />
    <result column="work_date" property="workDate" jdbcType="INTEGER" />
    <result column="salary" property="salary" jdbcType="INTEGER" />
    <result column="restaurant_id" property="restaurantId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    user_id, password, authority, entry_date, work_date, salary, restaurant_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.team.entity.UserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_tbl
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user_tbl
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <select id="selectByEntity" resultMap="BaseResultMap" parameterType="com.team.entity.User">
    select
    <include refid="Base_Column_List"/>
    from user_tbl
    <where>
      <if test="userId != null">
        user_id = #{userId}
      </if>
      <if test="password != null">
        and password = #{password}
      </if>
      <if test="authority != null">
        and authority = #{authority}
      </if>
      <if test="entryDate != null">
        and entry_date = #{entryDate}
      </if>
      <if test="workDate != null">
        and work_date = #{workDate}
      </if>
      <if test="salary != null">
        and salary = #{salary}
      </if>
      <if test="restaurantId != null">
        and restaurant_id = #{restaurantId}
      </if>
    </where>
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from user_tbl
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user_tbl
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.team.entity.UserExample" >
    delete from user_tbl
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.team.entity.User" >
    insert into user_tbl (user_id, password, authority, 
      entry_date, work_date, salary, 
      restaurant_id)
    values (#{userId,jdbcType=INTEGER}, #{password,jdbcType=VARCHAR}, #{authority,jdbcType=INTEGER}, 
      #{entryDate,jdbcType=DATE}, #{workDate,jdbcType=INTEGER}, #{salary,jdbcType=INTEGER}, 
      #{restaurantId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.team.entity.User" >
    insert into user_tbl
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="authority != null" >
        authority,
      </if>
      <if test="entryDate != null" >
        entry_date,
      </if>
      <if test="workDate != null" >
        work_date,
      </if>
      <if test="salary != null" >
        salary,
      </if>
      <if test="restaurantId != null" >
        restaurant_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="authority != null" >
        #{authority,jdbcType=INTEGER},
      </if>
      <if test="entryDate != null" >
        #{entryDate,jdbcType=DATE},
      </if>
      <if test="workDate != null" >
        #{workDate,jdbcType=INTEGER},
      </if>
      <if test="salary != null" >
        #{salary,jdbcType=INTEGER},
      </if>
      <if test="restaurantId != null" >
        #{restaurantId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.team.entity.UserExample" resultType="java.lang.Integer" >
    select count(*) from user_tbl
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update user_tbl
    <set >
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.authority != null" >
        authority = #{record.authority,jdbcType=INTEGER},
      </if>
      <if test="record.entryDate != null" >
        entry_date = #{record.entryDate,jdbcType=DATE},
      </if>
      <if test="record.workDate != null" >
        work_date = #{record.workDate,jdbcType=INTEGER},
      </if>
      <if test="record.salary != null" >
        salary = #{record.salary,jdbcType=INTEGER},
      </if>
      <if test="record.restaurantId != null" >
        restaurant_id = #{record.restaurantId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update user_tbl
    set user_id = #{record.userId,jdbcType=INTEGER},
      password = #{record.password,jdbcType=VARCHAR},
      authority = #{record.authority,jdbcType=INTEGER},
      entry_date = #{record.entryDate,jdbcType=DATE},
      work_date = #{record.workDate,jdbcType=INTEGER},
      salary = #{record.salary,jdbcType=INTEGER},
      restaurant_id = #{record.restaurantId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.team.entity.User" >
    update user_tbl
    <set >
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="authority != null" >
        authority = #{authority,jdbcType=INTEGER},
      </if>
      <if test="entryDate != null" >
        entry_date = #{entryDate,jdbcType=DATE},
      </if>
      <if test="workDate != null" >
        work_date = #{workDate,jdbcType=INTEGER},
      </if>
      <if test="salary != null" >
        salary = #{salary,jdbcType=INTEGER},
      </if>
      <if test="restaurantId != null" >
        restaurant_id = #{restaurantId,jdbcType=INTEGER},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.team.entity.User" >
    update user_tbl
    set password = #{password,jdbcType=VARCHAR},
      authority = #{authority,jdbcType=INTEGER},
      entry_date = #{entryDate,jdbcType=DATE},
      work_date = #{workDate,jdbcType=INTEGER},
      salary = #{salary,jdbcType=INTEGER},
      restaurant_id = #{restaurantId,jdbcType=INTEGER}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
</mapper>