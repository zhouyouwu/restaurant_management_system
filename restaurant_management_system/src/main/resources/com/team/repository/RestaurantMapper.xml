<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.team.repository.RestaurantMapper" >
  <resultMap id="BaseResultMap" type="com.team.entity.Restaurant" >
    <id column="restaurant_id" property="restaurantId" jdbcType="INTEGER" />
    <result column="restaurant_name" property="restaurantName" jdbcType="VARCHAR" />
    <result column="restaurant_address" property="restaurantAddress" jdbcType="VARCHAR" />
    <result column="restaurant_phone" property="restaurantPhone" jdbcType="BIGINT" />
    <result column="discount" property="discount" jdbcType="REAL" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    restaurant_id, restaurant_name, restaurant_address, restaurant_phone, discount
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.team.entity.RestaurantExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from restaurant_tbl
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from restaurant_tbl
    where restaurant_id = #{restaurantId,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from restaurant_tbl
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from restaurant_tbl
    where restaurant_id = #{restaurantId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.team.entity.RestaurantExample" >
    delete from restaurant_tbl
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.team.entity.Restaurant" keyProperty="restaurantId" useGeneratedKeys="true">
    insert into restaurant_tbl (restaurant_id, restaurant_name, restaurant_address, 
      restaurant_phone, discount)
    values (#{restaurantId,jdbcType=INTEGER}, #{restaurantName,jdbcType=VARCHAR}, #{restaurantAddress,jdbcType=VARCHAR}, 
      #{restaurantPhone,jdbcType=BIGINT}, #{discount,jdbcType=REAL})
  </insert>
  <insert id="insertSelective" parameterType="com.team.entity.Restaurant" >
    insert into restaurant_tbl
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="restaurantId != null" >
        restaurant_id,
      </if>
      <if test="restaurantName != null" >
        restaurant_name,
      </if>
      <if test="restaurantAddress != null" >
        restaurant_address,
      </if>
      <if test="restaurantPhone != null" >
        restaurant_phone,
      </if>
      <if test="discount != null" >
        discount,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="restaurantId != null" >
        #{restaurantId,jdbcType=INTEGER},
      </if>
      <if test="restaurantName != null" >
        #{restaurantName,jdbcType=VARCHAR},
      </if>
      <if test="restaurantAddress != null" >
        #{restaurantAddress,jdbcType=VARCHAR},
      </if>
      <if test="restaurantPhone != null" >
        #{restaurantPhone,jdbcType=BIGINT},
      </if>
      <if test="discount != null" >
        #{discount,jdbcType=REAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.team.entity.RestaurantExample" resultType="java.lang.Integer" >
    select count(*) from restaurant_tbl
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update restaurant_tbl
    <set >
      <if test="record.restaurantId != null" >
        restaurant_id = #{record.restaurantId,jdbcType=INTEGER},
      </if>
      <if test="record.restaurantName != null" >
        restaurant_name = #{record.restaurantName,jdbcType=VARCHAR},
      </if>
      <if test="record.restaurantAddress != null" >
        restaurant_address = #{record.restaurantAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.restaurantPhone != null" >
        restaurant_phone = #{record.restaurantPhone,jdbcType=BIGINT},
      </if>
      <if test="record.discount != null" >
        discount = #{record.discount,jdbcType=REAL},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update restaurant_tbl
    set restaurant_id = #{record.restaurantId,jdbcType=INTEGER},
      restaurant_name = #{record.restaurantName,jdbcType=VARCHAR},
      restaurant_address = #{record.restaurantAddress,jdbcType=VARCHAR},
      restaurant_phone = #{record.restaurantPhone,jdbcType=BIGINT},
      discount = #{record.discount,jdbcType=REAL}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.team.entity.Restaurant" >
    update restaurant_tbl
    <set >
      <if test="restaurantName != null" >
        restaurant_name = #{restaurantName,jdbcType=VARCHAR},
      </if>
      <if test="restaurantAddress != null" >
        restaurant_address = #{restaurantAddress,jdbcType=VARCHAR},
      </if>
      <if test="restaurantPhone != null" >
        restaurant_phone = #{restaurantPhone,jdbcType=BIGINT},
      </if>
      <if test="discount != null" >
        discount = #{discount,jdbcType=REAL},
      </if>
    </set>
    where restaurant_id = #{restaurantId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.team.entity.Restaurant" >
    update restaurant_tbl
    set restaurant_name = #{restaurantName,jdbcType=VARCHAR},
      restaurant_address = #{restaurantAddress,jdbcType=VARCHAR},
      restaurant_phone = #{restaurantPhone,jdbcType=BIGINT},
      discount = #{discount,jdbcType=REAL}
    where restaurant_id = #{restaurantId,jdbcType=INTEGER}
  </update>
</mapper>